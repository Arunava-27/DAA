#include <stdio.h>

int matrixChainOrder(int p[], int n) {
    int m[n][n];

    for (int i = 1; i < n; i++) {
        m[i][i] = 0;
    }

    for (int len = 2; len < n; len++) {
        for (int i = 1; i < n - len + 1; i++) {
            int j = i + len - 1;
            m[i][j] = 2147483647;

            for (int k = i; k <= j - 1; k++) {
                int q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];
                if (q < m[i][j]) {
                    m[i][j] = q;
                }
            }
        }
    }

    return m[1][n - 1];
}

int main() {
    int n;

    printf("Enter the number of matrices: ");
    scanf("%d", &n);

    int p[n + 1];

    printf("Enter the dimensions of the matrices: ");

    for (int i = 0; i <= n; i++) {
        scanf("%d", &p[i]);
    }

    printf("Minimum number of multiplications: %d", matrixChainOrder(p, n + 1));
    
    return 0;
}
