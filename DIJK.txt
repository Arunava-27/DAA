#include <stdio.h>
#include <stdlib.h>
#define MAX 100
#define INF 9999

void dijkstra(int graph[MAX][MAX], int n, int start){
    int cost[MAX][MAX], distance[MAX], visited[MAX], pred[MAX];
    int count, mindistance, nextnode, i, j;

    //initialize cost matrix
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            if(graph[i][j]==0){
                cost[i][j]=INF;
            }
            else{
                cost[i][j]=graph[i][j];
            }
        }
    }

    //initialize visited, distance and pred array
    for(i=0;i<n;i++){
        distance[i]=cost[start][i];
        pred[i]=start;
        visited[i]=0;
    }

    distance[start]=0;
    visited[start]=1;
    count=1;

    while(count<n-1){
        mindistance=INF;

        //nextnode gives the node at minimum distance
        for(i=0;i<n;i++){
            if(distance[i]<mindistance&&!visited[i]){
                mindistance=distance[i];
                nextnode=i;
            }
        }

        //check if a better path exists through nextnode
        visited[nextnode]=1;
        for(i=0;i<n;i++){
            if(!visited[i]){
                if(mindistance+cost[nextnode][i]<distance[i]){
                    distance[i]=mindistance+cost[nextnode][i];
                    pred[i]=nextnode;
                }
            }
        }
        count++;
    }

    //print the path and distance of each node
    for(i=0;i<n;i++){
        if(i!=start){
            printf("\nDistance of node %d = %d", i, distance[i]);
            printf("\nPath=%d", i);

            j=i;
            do{
                j=pred[j];
                printf("<-%d", j);
            }while(j!=start);
        }
    }
}

int main(){
    int graph[MAX][MAX], i, j, n, start;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("\nEnter the adjacency matrix:\n");
    for(i=0;i<n;i++){
        for(j=0;j<n;j++){
            scanf("%d", &graph[i][j]);
        }
    }

    printf("\nEnter the starting node: ");
    scanf("%d", &start);

    dijkstra(graph, n, start);

    return 0;
}